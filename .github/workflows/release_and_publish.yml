name: release-and-publish

on:
  push:
  workflow_dispatch:
  repository_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['16']
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '30'
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/
      - name: Step 1 - ‚öôÔ∏è Setup application
        run: |
          git config user.name "ü§ñ DailyBot"
          git config user.email "ops@dailybot.com"
          npm install
      - name: Step 2 - üß™ Run tests
        run: npm run test
      - name: Step 3 - üõ†Ô∏è Build application bundle
        run: npm run build
      - name: Step 4 - üìÑ Set GitHub release content "BODY" env var
        run: |
          echo "----- GIT LOGS INIT ----"
          git log --pretty=oneline
          echo "----- GIT LOGS END ----"
          bash get_github_release_log.sh
          echo "##### GIT LOGS INIT 1 #####"
          cat git_logs.txt
          echo "##### GIT LOGS END 1 #####"
          echo "##### GIT LOGS INIT 2 #####"
          cat git_logs_output.txt
          echo "##### GIT LOGS END 2 #####"
          GITHUB_RELEASE_BODY=$(cat git_logs_output.txt)
          if [[ -z $GITHUB_RELEASE_BODY ]]; then
            echo "‚ö†Ô∏è No description found for release body content."
            exit 1
          fi
          echo $GITHUB_RELEASE_BODY
          echo "#####"
          echo "::set-env name=GITHUB_RELEASE_BODY::$GITHUB_RELEASE_BODY"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      - name: Step 5 -üîÑ Prepare release
        run: |
          git status
          git add .
          git commit -am "[ü§ñ DailyBot] Minor updates on package versions." || echo "[ü§ñ DailyBot] No changes to commit"
          npm run release
          git push --follow-tags origin master
      - name: Step 6 - üè∑Ô∏è Set GitHub release "TAG" env vars
        run: |
          GITHUB_RELEASE_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          if [[ -z $GITHUB_RELEASE_TAG ]]; then
            echo "‚ö†Ô∏è No release tag found."
            exit 1
          fi 
          echo "::set-env name=GITHUB_RELEASE_TAG::$GITHUB_RELEASE_TAG"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      - name: Step 7 - üöÄ Publish GitHub release
        uses: ncipollo/release-action@v1
        with:
          name: Release ${{ env.GITHUB_RELEASE_TAG }}
          tag: ${{ env.GITHUB_RELEASE_TAG }}
          body: |
            Text 1
            Text 2
            Text 3
            echo ${{ env.GITHUB_RELEASE_BODY }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Step 8 - üöÄüöÄ Publish npm package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

