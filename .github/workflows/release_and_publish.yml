name: release-and-publish

on:
  push:
  workflow_dispatch:
  repository_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ['16']
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '30'
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org/
      - name: Step 1 - ⚙️ Setup application
        run: |
          git config user.name "🤖 DailyBot"
          git config user.email "ops@dailybot.com"
          npm install
      - name: Step 2 - 🧪 Run tests
        run: npm run test
      - name: Step 3 - 🛠️ Build application bundle
        run: npm run build
      - name: Step 4 - 📄 Set GitHub release content "BODY" env var
        run: |
          bash get_github_release_log.sh
          GITHUB_RELEASE_BODY=$(cat git_logs_output.txt)
          echo "::set-env name=GITHUB_RELEASE_BODY::$GITHUB_RELEASE_BODY"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      - name: Step 5 -🔄 Prepare release
        run: |
          git status
          git add .
          git commit -am "[🤖 DailyBot] Minor updates on package versions." || echo "[🤖 DailyBot] No changes to commit"
          npm run release
          git push --follow-tags origin master
      - name: Step 6 - 🏷️ Set GitHub release "TAG" env vars
        run: echo "::set-env name=GITHUB_RELEASE_TAG::$(git describe --tags $(git rev-list --tags --max-count=1))"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      - name: Step 7 - 🚀 Publish GitHub release
        uses: ncipollo/release-action@v1
        with:
          name: Release ${{ env.LAST_GITHUB_TAG }}
          tag: ${{ env.LAST_GITHUB_TAG }}
          body: "${{ env.GITHUB_RELEASE_BODY }}"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Step 8 - 🚀🚀 Publish npm package
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

